' Gambas class file

Public $conexionmysql As Connection

Public Function getConexionmysql() As Connection
    
    Print "Creando conexión a la Base de Datos MYSQL ..."
    $conexionmysql = New Connection
    
    $conexionmysql.Type = "mysql"
    $conexionmysql.Name = "sysdbalmacen" '"sysdbadmins"
    $conexionmysql.Host = "10.10.34.23" 'esto va asi??
    $conexionmysql.Login = "sysdbuser" 
    $conexionmysql.Password = "sysdbuser.1.com"
    '   ______________________________________________________________
    ' < muuuuuuchas loqueras con las bases de datos ¿será contagioso?  >  
    '   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    '  \  ^__^                                               ^__^  /
    '   \ (@@)\ _______                             _______ /(00) /
    '     (__) \       )\/\                     /\/(       / (__)
    '           ||---w |                           | w---||
    '           ||    ||                           ||    ||
    '               * /
    '  $conexionmysql.Host = "10.10.34.132"
    ' $conexionmysql.Login = "sysdbadmin" '"sysdbuser" 
    ' $conexionmysql.Password = "sysdb.1.com" '"sysdbuser.1.com"
    
    Try $conexionmysql.Open
    If Error Then 
        ' Message.error("Error al intentar conectarse a la Base de Datos MYSQL")
        Print "Error al intentar conectarse a la Base de Datos MYSQL:"
        Print ERROR.TEXT
        Print ERROR.CODE
        Print ERROR.WHERE
        $conexionmysql = Null
    Endif
    
    Return $conexionmysql
    
End

Public Function operar() As Collection
    
    Dim rs, sr, sr2 As Result
    Dim conex1, conex2 As Connection 
    Dim op As New Collection 
    Dim cuenta, x As Integer
    Dim est, query, code As String
    Dim aux As New String[] ' esta sera una cola 
    
    conex1 = getConexionmysql()
    conex2 = getConexionmysql() ' aqui puede ser la odbc, cuando se configure a futuro 
    If (conex1 <> Null) And (conex2 <> Null) Then 
        ' hacer query en la tabla de usuarios y determinar si debe haber algun cambio o no     
        
        query = "SELECT sysdbadmins.adm_entidad_usuario.cod_entidad, sysdbadmins.adm_usuario.ficha, sysdbadmins.adm_usuario.intranet, sysdbadmins.adm_usuario.clave, sysdbadmins.adm_usuario.apellido,"
        query = query & "sysdbadmins.adm_usuario.nombre, sysdbadmins.adm_usuario.origen, sysdbadmins.adm_usuario.condicion, sysdbadmins.adm_usuario.estado, tipo_usuario, sysdbadmins.adm_usuario.clase_usuario, sysdbadmins.adm_usuario.sessionflag,"
        query = query & "sysdbadmins.adm_usuario.sessionficha From sysdbadmins.adm_usuario, sysdbadmins.adm_entidad_usuario where sysdbadmins.adm_usuario.intranet = sysdbadmins.adm_entidad_usuario.intranet"
        rs = conex1.Exec(query)
        cuenta = 0 ' llev a la cuenta de operaciones
        ' se recorre el result
        If rs.Available Then
            ' recorrer el result 
            
            For Each rs
                Error.Clear
                est = rs["estado"]  
                
                ' verificar si existe la cadena CREAR      
                If Comp(est, "CREAR", gb.IgnoreCase) = 0 Then
                    Print "Se efectúa la creación de nuevo usuario en la tabla sysdbpos.app_usuario."
                    
                    ' hacer insert en la tabla: usar el objeto result con la el método create de conex2 
                    sr = conex2.Create("sysdbpos.app_usuario.")
                    
                    ' se  pasa cada dato del result rs al result sr"
                    sr["cod_entidad"] = rs["cod_entidad"]
                    sr["ficha"] = rs["ficha"]
                    sr["intranet"] = rs["intranet"] 
                    sr["clave"] = rs["clave"]
                    sr["apellido"] = rs["apellido"]
                    sr["nombre"] = rs["nombre"]
                    sr["origen"] = rs["origen"]
                    sr["condicion"] = rs["condicion"]
                    sr["estado"] = rs["estado"]
                    sr["tipo_usuario"] = rs["tipo_usuario"]
                    sr["clase_usuario"] = rs["clase_usuario"]
                    sr["sessionflag"] = rs["sessionflag"]
                    sr["sessionficha"] = rs["sessionficha"]
                    ' actualizar la tabla app_usuario
                    sr.Update
                    'ahora se trabaja con la tabla app_entidad_usuario
                    sr2 = conex2.Create("sysdbpos.app_entidad_usuario")
                    sr2["cod_entidad"] = rs["cod_entidad"]
                    sr2["intranet"] = rs["intranet"] 
                    sr2["sessionflag"] = rs["sessionflag"] 
                    sr2["sessionficha"] = rs["sessionficha"]
                    sr2.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        conex2.Rollback
                        Print "Error: fallo la inserción de nuevo usuario"
                    Else
                        ' exito               
                        conex2.Commit 
                        Print "Exito en la inserción de nuevo usuario."
                        cuenta = cuenta + 1 ' se incrementa la cuenta de operaciones
                        op.Add("Creación usuario.", cuenta)
                    Endif
                Endif
                ' verificar si existe la cadena  ACTIVAR     
                If Comp(est, "ACTIVAR", gb.IgnoreCase) = 0 Then
                    Print "Se efectúa Activación un usuario en la tabla sysdbpos.app_usuario."
                    sr = conex2.Edit("sysdbpos.app_usuario", "ficha=" & rs["ficha"])
                    sr["estado"] = "ACTIVO"
                    sr.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        conex2.Rollback
                        Print "Error: fallo la Activación de usuario."
                        
                    Else
                        ' exito               
                        conex2.Commit 
                        Print "Exito en la Activación de usuario."
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Activación usuario.", cuenta)
                    Endif  
                Endif
                
                ' verificar si existe la cadena  ELIMINAR
                If Comp(est, "ELIMINAR", gb.IgnoreCase) = 0 Then
                    ' eliminar ambos registros en cada tabla...
                    Print "Se efectúa Eliminación de un usuario en la tabla sysdbpos.app_usuario."
                    aux.Add = rs["ficha"] 'se guarda la ficha y luego, al salir del ciclo se elimina del registro, y si son varios igual, les llegara su hora
                    'eliminar en la tabla sysdbpos.app_usuario
                    sr = conex2.Delete("sysdbpos.app_usuario", "ficha=" & rs["ficha"])
                    
                    sr2 = conex2.Delete("sysdbpos.app_usuario", "cod_entidad=" & rs["cod_entidad"])
                    
                    If Error Then
                        ' error no se agrega nada y ya
                        conex2.Rollback
                        Print "Error: fallo la Eliminación de usuario"
                    Else
                        ' exito               
                        conex2.Commit 
                        Print "Exito en la Eliminación de usuario"
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Creacion usuario.", cuenta)
                    Endif  
                Endif
                ' verificar si existe la cadena
                If Comp(est, "DESACTIVAR", gb.IgnoreCase) = 0 Then
                    Print "Se efectúa Desactivación de un usuario en la tabla sysdbpos.app_usuario."
                    sr = conex2.Edit("sysdbpos.app_usuario", "ficha=" & rs["ficha"])
                    sr["estado"] = "INACTIVO"
                    sr.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        conex2.Rollback
                        Print "Error: fallo la Desactivación de usuario."
                    Else
                        ' exito               
                        conex2.Commit 
                        Print "Exito en la Desactivación de usuario."
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Desactivación usuario.", cuenta)
                    Endif  
                Endif
                
            Next  
            ' ya se terminó del ciclo, ahora se eliminan los registros en la tabla
            ' preguntar si hay eliminación...
            
            If aux.count > 0 Then  ' hay cola...
                If aux.count == 1
                    Print "Ejecutar operación pendiente:"
                Else
                    Print "Ejecutar " & aux.count & " operaciones pendientes:"
                Endif    
                
                For Each code In aux 
                    Print "Se efectúa Eliminación de un usuario en la tabla sysdbpos.app_usuario."
                    rs = conex1.Delete("sysdbadmins.adm_usuario", "ficha=" & code)
                    If Error Then
                        ' error no se agrega nada y ya
                        conex1.Rollback
                        Print "Error: fallo la Eliminación de usuario."
                    Else
                        ' exito               
                        conex1.Commit 
                        Print "Exito en la Eliminación de usuario."
                        
                    Endif  
                Next
            Endif 
            
        Else
            Print "Error: rs.available no tiene datos o "
        Endif   
        conex1.Close
        conex2.close    
    Endif
    Return op

End
