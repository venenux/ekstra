' Gambas class file

Private $dbcnx As Edbm

Private Sub italive()

End

Public Function operar() As Collection
    
    Dim rs, sr, sr2 As Result
    Dim conex1 As Connection 
    Dim op As New Collection 
    Dim cuenta, x As Integer
    Dim est, query, code As String
    Dim eliminaciones As New String[] ' esta sera una cola para eliminaciones para la tabla
    Dim activaciones As New String[] ' esta sera una cola para esitar el estado para
    ' empiezan las operaciones con la base de datos
    
    Print "Solicitando acceso a la base de Datos..."
    conex1 = getConexionmysql()
    ' 
    'If (conex1 <> Null) And (conex2 <> Null) Then 
    If conex1 <> Null Then 
        ' hacer query en la tabla de usuarios y determinar si debe haber algun cambio o no     
        Print "Se tiene Acceso a la base de datos, iniciando las operaciones programadas...  " 
        query = "SELECT sysdbadmins.adm_entidad_usuario.cod_entidad, sysdbadmins.adm_usuario.ficha, sysdbadmins.adm_usuario.intranet, sysdbadmins.adm_usuario.clave, sysdbadmins.adm_usuario.apellido,"
        query = query & "sysdbadmins.adm_usuario.nombre, sysdbadmins.adm_usuario.origen, sysdbadmins.adm_usuario.condicion, sysdbadmins.adm_usuario.estado, tipo_usuario, sysdbadmins.adm_usuario.clase_usuario, sysdbadmins.adm_usuario.sessionflag,"
        query = query & "sysdbadmins.adm_usuario.sessionficha From sysdbadmins.adm_usuario, sysdbadmins.adm_entidad_usuario where sysdbadmins.adm_usuario.intranet = sysdbadmins.adm_entidad_usuario.intranet"
        rs = conex1.Exec(query)
      '  sr = conex2.Exec("Select * From sysdbpos.app_usuario limit 1")
         sr = Connections["Connection1"].Exec("Select * From app_usuario limit 1")
        cuenta = 0 ' llev a la cuenta de operaciones
        ' se recorre el result
        If (rs.Available And sr.available) Then
            ' recorrer el result 
          
            For Each rs
                Error.Clear
                est = rs["estado"]  
                
                ' verificar si existe la cadena CREAR      
                If Comp(est, "CREAR", gb.IgnoreCase) = 0 Then
                    Print "Operación Programada: Creación de nuevo usuario ."
                    
                    ' hacer insert en la tabla: usar el objeto result con la el método create de conex2 
               
                    sr = Connections["Connection1"].Create("app_usuario") 
                    ' se  pasa cada dato del result rs al result sr"
                    sr["cod_entidad"] = rs["cod_entidad"]
                    sr["ficha"] = rs["ficha"]
                    sr["intranet"] = rs["intranet"] 
                    sr["clave"] = rs["clave"]
                    sr["apellido"] = rs["apellido"]
                    sr["nombre"] = rs["nombre"]
                    sr["origen"] = rs["origen"]
                    sr["condicion"] = rs["condicion"]
                    sr["estado"] = "INACTIVO" '  
                    sr["tipo_usuario"] = rs["tipo_usuario"]
                    sr["clase_usuario"] = rs["clase_usuario"]
                    sr["sessionflag"] = rs["sessionflag"]
                    sr["sessionficha"] = rs["sessionficha"]
                    ' actualizar la tabla app_usuario
                    Try sr.Update
                    'ahora se trabaja con la tabla app_entidad_usuario
                    sr2 = Connections["Connection1"].Create("app_entidad_usuario")
                    sr2["cod_entidad"] = rs["cod_entidad"]
                    sr2["intranet"] = rs["intranet"] 
                    sr2["sessionflag"] = rs["sessionflag"] 
                    sr2["sessionficha"] = rs["sessionficha"]
                    Try sr2.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        Connections["Connection1"].Rollback
                        Print "Error: falló la creación de usuario"
                    Else
                        ' exito               
                        Connections["Connection1"].Commit 
                        Print "Exito en la creación de usuario."
                        cuenta = cuenta + 1 ' se incrementa la cuenta de operaciones
                        op.Add("Creación usuario.", cuenta)
                        ' a la cola de edición...
                    Endif
                Endif
                ' verificar si existe la cadena  ACTIVAR     
                If Comp(est, "ACTIVAR", gb.IgnoreCase) = 0 Then
                    Print " Operación Programada: Activación  de un usuario. "
                    sr = Connections["edicioConnection1"].Edit("app_usuario", "ficha=" & rs["ficha"])
                    sr["estado"] = "ACTIVO"
                    Try sr.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        Connections["Connection1"].Rollback
                        Print "Error: falló la Activación de usuario."
                        
                    Else
                        ' exito               
                        Connections["Connection1"].Commit 
                        Print "Exito en la Activación de  usuario."
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Activación usuario.", cuenta)
                    Endif  
                Endif
                
                ' verificar si existe la cadena  ELIMINAR
                If Comp(est, "ELIMINAR", gb.IgnoreCase) = 0 Then
                    ' eliminar ambos registros en cada tabla...
                    Print "Operación Programada: Eliminación de un usuario."
                    eliminaciones.Add = rs["ficha"] 'se guarda la ficha y luego, al salir del ciclo se elimina del registro, y si son varios igual, les llegara su hora
                    'eliminar en la tabla sysdbpos.app_usuario
                    Try sr = Connections["Connection1"].Delete("app_usuario", "ficha=" & rs["ficha"])
                    
                    Try sr2 = Connections["Connection1"].Delete("app_usuario", "cod_entidad=" & rs["cod_entidad"])
                    
                    If Error Then
                        ' error no se agrega nada y ya
                        Connections["Connection1"].Rollback
                        Print "Error: falló la Eliminación de usuario"
                    Else
                        ' exito               
                        Connections["Connection1"].Commit 
                        Print "Exito en la Eliminación de usuario"
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Creacion usuario.", cuenta)
                    Endif  
                Endif
                ' verificar si existe la cadena
                If Comp(est, "DESACTIVAR", gb.IgnoreCase) = 0 Then
                    Print "Operación Programada: Desactivación de un usuario."
                    sr = Connections["Connection1"].Edit("app_usuario", "ficha=" & rs["ficha"])
                    sr["estado"] = "INACTIVO"
                    Try sr.Update
                    If Error Then
                        ' error no se agrega nada y ya
                        Connections["Connection1"].Rollback
                        Print "Error: falló la Desactivación de usuario."
                    Else
                        ' exito               
                        Connections["Connection1"].Commit 
                        Print "Exito en la Desactivación de usuario."
                        cuenta = cuenta + 1  ' se incrementa la cuenta de operaciones
                        op.Add("Desactivación usuario.", cuenta)
                    Endif  
                Endif
                
            Next  
            ' ya se terminó del ciclo, ahora se eliminan los registros en la tabla
            ' preguntar si hay eliminación...
            
            If eliminaciones.count > 0 Then  ' hay cola...
                If eliminaciones.count == 1
                    Print "Ejecutar operación de eliminación pendiente:"
                Else
                    Print "Ejecutar " & eliminaciones.count & " operaciones de eliminación pendientes:"
                Endif    
                
                For Each code In eliminaciones
                    Print "Se efectúa Eliminación de un usuario en la tabla sysdbpos.app_usuario."
                    Try rs = conex1.Delete("sysdbadmins.adm_usuario", "ficha=" & code)
                    If Error Then
                        ' error no se agrega nada y ya
                        conex1.Rollback
                        Print "Error: falló la Eliminación de usuario."
                    Else
                        ' exito               
                        conex1.Commit 
                        Print "Exito en la Eliminación de usuario."
                        
                    Endif  
                Next
                ' ahora a cambiar el estado del usuario que fué creado a 
            Endif 
            
        Else
            ' mandar el mensaje que corresponda segun sea cual result no esta disponible
            Print "Error:  Objeto result sin datos. Detalles:  "
            If rs.Available Then
              Print "No existen datos de la tabla sysdbpos.app_usuario"
            Else
              Print "No existen datos de la tablas sysdbadmins.adm_usuarios ni sysdbadmins.entidad_usuario"   
            Endif
            
        Endif   
        conex1.Close
        'conex2.close
          Connections["Connection1"].close    
    Endif
    '     
    
    Return op

End
